% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/gist_create_git.R
\name{gist_create_git}
\alias{gist_create_git}
\title{Create a gist via git instead of the GitHub Gists HTTP API}
\usage{
gist_create_git(files = NULL, description = "", public = TRUE,
  browse = TRUE, knit = FALSE, code = NULL, filename = "code.R",
  knitopts = list(), renderopts = list(), include_source = FALSE,
  artifacts = FALSE, imgur_inject = FALSE, ...)
}
\arguments{
\item{files}{Files to upload}

\item{description}{(character) Brief description of gist (optional)}

\item{public}{(logical) Whether gist is public (default: TRUE)}

\item{browse}{(logical) To open newly create gist in default browser (default: TRUE)}

\item{knit}{(logical) Knit code before posting as a gist? If the file has a \code{.Rmd}
or \code{.Rnw} extension, we run the file with \code{link[knitr]{knit}}, and if it has
a \code{.R} extension, then we use \code{\link[rmarkdown]{render}}}

\item{code}{Pass in any set of code. This can be a single R object, or many lines of code
wrapped in quotes, then curly brackets (see examples below).}

\item{filename}{Name of the file to create, only used if \code{code} parameter is used. Default
to \code{code.R}}

\item{knitopts,renderopts}{(list) List of variables passed on to \code{link[knitr]{knit}},
or \code{\link[rmarkdown]{render}}}

\item{include_source}{(logical) Only applies if \code{knit=TRUE}. Include source file in the
gist in addition to the knitted output.}

\item{artifacts}{(logical/character) Include artifacts or not. If \code{TRUE},
includes all artifacts. Or you can pass in a file extension to only upload
artifacts of certain file exensions. Default: \code{FALSE}}

\item{imgur_inject}{(logical) Inject \code{\link[knitr]{imgur_upload}} into your
\code{.Rmd} file to upload files to \url{http://imgur.com/}. This will be ignored
if the file is a sweave/latex file because the rendered pdf can't be uploaded
anyway. Default: FALSE}

\item{...}{Further args passed on to \code{link[httr]{POST}}}
}
\description{
Create a gist via git instead of the GitHub Gists HTTP API
}
\details{
Note that when \code{browse=TRUE} there is a slight delay in when
we open up the gist in your default browser and when the data will display
in the gist. We could have this function sleep a while and guess when it
will be ready, but instead we open your gist right after we're done sending
the data to GitHub. Make sure to refresh the page if you don't see your
content right away.

Likewise, the object that is returned from this function call may not have
the updated and correct file information. You can retrieve that easily by
calling \code{\link{gist}} with the gist id.

This function uses git instead of the HTTP API, and thus requires
the R package \code{git2r}. If you don't have \code{git2r} installed, and
try to use this function, it will stop and tell you to install \code{git2r}.

This function using git is better suited than \code{\link{gist_create}}
for use cases involving:

\itemize{
 \item Big files - The GitHub API allows only files of up to 1 MB in size. Using
 git we can get around that limit.
 \item Binary files - Often artifacts created are binary files like \code{.png}.
 The GitHub API doesn't allow transport of binary files, but we can do that with
 git.
}

Another difference between this function and \code{\link{gist_create}} is that
this function can easily collect all artifacts coming out of a knit process.
}
\examples{
\dontrun{
gist_create_git(files = "~/gitgist/stuff.md")
gist_create_git(files = c("~/gitgist/stuff.md", "~/gitgist/icanhazallthedata.md"))
gist_create_git(files = "~/gitgist")

# binary files
gist_create_git(files = "~/gitgist/ropensci_add.png")

# knit files first, then push up
gist_create_git(files = "~/gitgistknit/plots.Rmd", knit = TRUE)

# collect all/any artifacts from knitting process
gist_create_git("~/gitgistartifacts/artifacts_eg1.Rmd", knit = TRUE,
   artifacts = TRUE)

# from code
gist_create_git(code={'
x <- letters
numbers <- runif(8)
numbers

[1] 0.3229318 0.5933054 0.7778408 0.3898947 0.1309717 0.7501378 0.3206379 0.3379005
'}, filename="my_cool_code.R")

# include artifacts, e.g., images created during knit process
file <- system.file("examples", "plots.Rmd", package = "gistr")
dir <- tempdir()
file.copy(file, dir)
file <- file.path(dir, "plots.Rmd")
setwd(dir)
gist_create_git(file)
gist_create_git(file, knit = TRUE)
gist_create_git(file, knit = TRUE, artifacts = TRUE)
}
}
\seealso{
\code{\link{gist_create}}, \code{\link{gist_create_obj}}
}

